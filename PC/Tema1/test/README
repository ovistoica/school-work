Tema 1 Protocoale de Comunicare
Nume: Stoica George-Ovidiu
Grupa: 322 CA

1. STRUCTURI:
Pentru implementarea structurii Kermit am folosit pachetele kerm_pack si
send_init definite in lib.h. Structura kerm_pack defineste pachetul generic
ce contine toate atributele necesarii transmiterii pachetului(LEN, SEQ,
DATA etc.) iar send_init este un pachet folosit pentru stocarea regulilor
transmisiunii(MAXL, TIME, NPAD etc), transmise la primul contact al serverului
cu clientul.  Dupa formarea mesajului de tip kerm_pack acesta este copiat in
msg.payload, lungimea acestuia fiind copiata in msg.len.

Numarul de secventa se incrementeaza cu macro-ul inc_seq definit in lib.h. Mentionez 
ca am luat aceasca functie de incrementare din Computer Networks - Tanembaum.

2. ALGORITM TRANSMITERE:
[SENDER]
    Senderul trimite mesajul initial(SYN) si asteapta ACK sau NAK in functie de
corectitudinea transmiterii. Dupa ce primeste ACK incepe sa trimita fisierele
dupa regulile definite in tema.
Pentru transmiterea unui singur pachet, acesta este setat initial pe 0.
Headerul este setat pe cel default, SEQ este incrementat, este setat TYPE
corespunzator, DATA este setat in functie de tipul mesajului iar dupa ce toate
atributele au fost setate mai putin CHECK si MARK, se calculeaza suma de control
si este setata in CHECK. LEN stocheaza lungimea campului DATA, pentru ca DATA nu
are mai mult de 250 de Bytes.
    Pentru retrimiterea mesajelor cu timeout, am folosit in sender functia
send_until_correct(const msg *t) care retrimite mesajul de trei ori in cazul a
trei timeout-uri consecutive. Timeout count se reseteaza daca dupa doua
timeout-uri se primeste NAK.

[RECEIVER]
    Receiverul primeste mesajul, verifica suma de control, si trimite ACK sau
NAK in functie de verificare. In caz ca numarul de secventa este acelasi cu cel
primit in mesajul anterior (retrimitere mesaj din partea sender-ului), ceea ce
inseamna ca ACK-ul pentru mesajul anterior s-a pierdut pe canal iar senderul
retrimite mesajul la timeout, receiver-ul va trimite ACK pentru pachet, dar va
arunca pachetul. Pachetul ce contine NAK/ACK contine numarul de secventa pentru
care trimite confirmare. Dupa primul mesaj de setare a regulilor transmiterii,
receiver-ul intra in loop infinit asteptand mesaje, scriind mesajele de tip DATA
in fisierele deschise in urma trimiterii mesajelor de tip File_Header iar cand primeste 
un pachet cu tipul EOT, incheie transmiterea.


